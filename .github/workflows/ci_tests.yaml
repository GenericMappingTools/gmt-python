# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PyGMT Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.os }} - Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        python_version: [3.7]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      # Checkout current git repository
      - name: Checkout
        uses: actions/checkout@v2.1.0

      # Setup Miniconda
      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge

      # Install GMT and other required dependencies from conda-forge
      - name: Install GMT and required dependencies
        shell: bash -l {0}
        run: conda install gmt=6.0.0 numpy pandas xarray netCDF4 packaging make

      # Show installed pkg information for postmortem diagnostic
      - name: List installed packages
        shell: bash -l {0}
        run: conda list

      # Set environment variables for Linux/MacOS
      - name: Set GMT environment variables for Linux/MacOS
        run: |
          echo ::set-env name=LD_LIBRARY_PATH/gmt/lib:$LD_LIBRARY_PATH
          echo ::set-env name=GMT_LIBRARY_PATH/gmt/lib
        if: matrix.os != 'windows-latest'

      # Set environment variables for Windows
      - name: Set GMT environment variables for Windows
        run: |
          echo ::set-env name=GMT_LIBRARY_PATH::%CONDA_PREFIX%\Library\bin
          echo ::set-env name=GMT_SHAREDIR::%CONDA_PREFIX%\Library\share\gmt
        if: matrix.os == 'windows-latest'

      # Install the package that we want to test
      - name: Install the package
        shell: bash -l {0}
        run: |
          python setup.py sdist --formats=zip
          pip install dist/*

      # Run the tests
      - name: Test with pytest
        shell: bash -l {0}
        run: make test PYTEST_EXTRA="-r P"
