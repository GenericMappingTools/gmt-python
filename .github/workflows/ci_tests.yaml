# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PyGMT Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.os }} - Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      # Checkout current git repository
      - name: Checkout
        uses: actions/checkout@v2.1.0

      # Setup Miniconda
      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1.3.1
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge

      # Install GMT and other required dependencies from conda-forge
      - name: Install GMT and required dependencies
        shell: bash -l {0}
        run: conda install gmt=6.0.0 numpy pandas xarray netCDF4 packaging make pytest pytest-cov pytest-mpl sphinx jinja2 docutils ipython

      # Show installed pkg information for postmortem diagnostic
      - name: List installed packages
        shell: bash -l {0}
        run: conda list

      # Cache the ${HOME}/.gmt directory, for docs and testing
      - name: Cache GMT directory
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ${{ github.workspace }}/.gmt/cache
            ${{ github.workspace }}/.gmt/server
          key: cache-gmt-${{ github.ref }}-20200605-2
          restore-keys: cache-gmt-refs/heads/master-

      # Download remote files, if not already cached
      - name: Download remote data
        shell: bash -l {0}
        run: gmt which -Gu @earth_relief_10m @earth_relief_60m @ridge.txt @Table_5_11.txt @tut_bathy.nc @tut_quakes.ngdc @tut_ship.xyz
        if: steps.cache.outputs.cache-hit != 'true'

      # Install the package that we want to test
      - name: Install the package
        shell: bash -l {0}
        run: |
          python setup.py sdist --formats=zip
          pip install dist/*

      # Run the tests
      - name: Test with pytest
        shell: bash -l {0}
        run: make test PYTEST_EXTRA="-r P"
